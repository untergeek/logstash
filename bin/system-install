#!/bin/bash

unset CDPATH
. "$(cd `dirname $0`/..; pwd)/bin/logstash.lib.sh"
setup

if [ -r $1 ]; then
  echo "Using provided startup.options file: ${1}"
  . $1
else
  [ -r ${LOGSTASH_HOME}/config/startup.options ] && . ${LOGSTASH_HOME}/config/startup.options
  [ -r /etc/logstash/startup.options ] && . /etc/logstash/startup.options
fi

# bin/logstash-plugin is a short lived ruby script thus we can use aggressive "faster starting JRuby options"
# see https://github.com/jruby/jruby/wiki/Improving-startup-time
export JRUBY_OPTS="$JRUBY_OPTS -J-XX:+TieredCompilation -J-XX:TieredStopAtLevel=1 -J-noverify -X-C -Xcompile.invokedynamic=false"

tempfile=$(mktemp)

read -r -d '' PRESTART << EOM
# Load the defaults
[ -r ${LOGSTASH_HOME}/config/startup.options ] && . ${LOGSTASH_HOME}/config/startup.options
[ -r /etc/logstash/startup.options ] && . /etc/logstash/startup.options

/bin/touch ${LS_LOG_FILE}
EOM

opts=("--log" "$tempfile" "--overwrite" "--install" "--name" "${INIT_NAME}" "--user" "${LS_USER}" "--group" "${LS_GROUP}" "--description" "${INIT_DESCRIPTION}" "--nice" "${LS_NICE}" "--limit-open-files" "${LS_OPEN_FILES}" "--prestart" "${PRESTART}")
program="$(cd `dirname $0`/..; pwd)/bin/logstash"

capture="$(ruby_exec "${LOGSTASH_HOME}/lib/systeminstall/pleasewrap.rb" "${opts[@]}" ${program} ${INIT_ARGS})"
exit_code=$?

if [ $exit_code -ne 0 ]; then
  cat $tempfile
  echo "Unable to install system startup script for Logstash."
else
  echo "Successfully created system startup script for Logstash"
fi
rm $tempfile
